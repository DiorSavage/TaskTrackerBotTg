from aiogram.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

async def main_keyboard(user_data) -> InlineKeyboardMarkup:
	builder = InlineKeyboardBuilder()
	builder.add(
		InlineKeyboardButton(text="üë• –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π", callback_data="all_executors"),
		InlineKeyboardButton(text="üìù –ù–∞–∑–Ω–∞—á–∏—Ç—å –∑–∞–¥–∞—á—É –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data="set_task"),
		InlineKeyboardButton(text="‚úÖ –°–Ω—è—Ç—å –∑–∞–¥–∞—á—É", callback_data="confirm_task"),
		InlineKeyboardButton(text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –∑–∞–¥–∞—á–∏", callback_data="change_executor"),
		# InlineKeyboardButton(text="‚åõ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏", callback_data="change_time"),
		InlineKeyboardButton(text="üìî –ú–æ–∏ –∑–∞–¥–∞—á–∏", callback_data="my_tasks"),
		InlineKeyboardButton(text="üìù –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏", callback_data="assigned_tasks"),
		InlineKeyboardButton(text="üìö –í—Å–µ –∑–∞–¥–∞—á–∏", callback_data="all_tasks"),
		InlineKeyboardButton(text=f"{"üòé" if user_data.status == True else "üò∂‚Äçüå´Ô∏è"} –°–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ {"–ê–∫—Ç–∏–≤–Ω—ã–π" if user_data.status == False else "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π"} ", callback_data="change_status"),
		InlineKeyboardButton(text="‚úçÔ∏è –°–æ–∑–¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="create_team"),
		InlineKeyboardButton(text="‚úçÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É", callback_data="change_team"),
	)
	return builder.adjust(2).as_markup(resize_keyboard=True, one_time_keyboard=True)

async def confirm_task_keyboard(task_ids: list[str]):
	builder = InlineKeyboardBuilder()
	for task_id in task_ids:
		builder.add(
			InlineKeyboardButton(
				text=f"–ó–∞–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É –ø–æ–¥ id: {task_id}",
				callback_data=f"close_task:{task_id}"
			)
		)
	return builder.adjust(2).as_markup(resize_keyboard=True, one_time_keyboard=True)

async def team_choose_keyboard(teams):
	builder = InlineKeyboardBuilder()
	for team in teams:
		builder.add(
			InlineKeyboardButton(
				text=f"–ö–æ–º–∞–Ω–¥–∞: {team.name}",
				callback_data=f"team_ex:{team.id}"
			)
		)
	return builder.adjust(2).as_markup(resize_keyboard=True, one_time_keyboard=True)

async def executor_choose_keyboard(executors, team_id: int, is_init: bool = False):
	builder = InlineKeyboardBuilder()
	for executor in executors:
		builder.add(
			InlineKeyboardButton(
				text=f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {executor.username}",
				callback_data=f"executor:{executor.username}:{team_id}"
			)
		)
	if not is_init:
		builder.add(InlineKeyboardButton(
			text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
			callback_data="save_executors"
		))
	return builder.adjust(2).as_markup(resize_keyboard=True, one_time_keyboard=True)

async def processed_tasks_keyboard(tasks):
	builder = InlineKeyboardBuilder()
	for task in tasks:
		builder.add(
			InlineKeyboardButton(
				text=f"–ó–∞–¥–∞—á–∞ - #{task.id}",
				callback_data=f"change_task_ex:{task.id}"
			)
		)
	return builder.adjust(2).as_markup(resize_keyboard=True, one_time_keyboard=True)